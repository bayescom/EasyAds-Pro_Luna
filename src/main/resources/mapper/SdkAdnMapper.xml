<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.easyads.component.mapper.SdkAdnMapper">

    <select id = "getSdkAdnCount" resultType = "java.lang.Integer"
            parameterType = "com.easyads.management.adn.model.filter.SdkAdnFilterParams">
        SELECT count(distinct A.id) AS cnt
        FROM
        (
            SELECT id
            FROM sdk_adn
            WHERE status = 1 AND mark_delete = 0
        ) A
        LEFT OUTER JOIN
        (
            SELECT M.adn_id
            FROM adspot_sdk_channel M
            JOIN adspot N ON M.adspot_id = N.id
            JOIN media P ON N.media_id = P.id
            WHERE
                N.status = 1 AND N.mark_delete = 0
                AND P.status = 1 AND P.mark_delete = 0
            GROUP BY 1
        ) B ON A.id = B.adn_id
        WHERE
            1 = 1
            <if test="status != null">
                AND IF(B.adn_id IS NULL, 0, 1) = #{status}
            </if>
            <if test="searchText != null">
                AND (A.name rlike #{searchText})
            </if>
    </select>

    <!-- SDK渠道广告网络 -->
    <resultMap id = "sdkAdnMap" type = "com.easyads.management.adn.model.bean.SdkAdn">
        <result property = "adnId" column = "adn_id" />
        <result property = "adnName" column = "adn_name" />
        <result property = "status" column = "status" />
        <result property = "reportApiStatus" column = "report_api_status" />
        <result property = "supportAutoCreate" column = "support_auto_create" />
        <result property = "adnParamsMeta" column = "params_meta" typeHandler = "com.easyads.component.mybatis.JsonArrayTypeHandler" />
        <result property = "reportApiParamsMeta" column = "report_api_meta" typeHandler = "com.easyads.component.mybatis.JsonArrayTypeHandler" />
        <collection property = "reportApiParams" ofType = "com.easyads.management.adn.model.bean.SdkAdnReportApi">
            <result property = "id" column = "report_api_id" />
            <result property = "name" column = "report_api_account_name" />
            <result property = "params" column = "report_api_params" />
            <result property = "status" column = "report_api_params_status" />
            <result property = "autoCreateStatus" column = "report_api_auto_create_status" />
            <result property = "usedCount" column = "used_count" />
        </collection>
    </resultMap>

    <select id = "getSdkAdnList" resultMap = "sdkAdnMap"
            parameterType = "com.easyads.management.adn.model.filter.SdkAdnFilterParams">
        SELECT
            A.id AS adn_id,
            A.adn_name,
            A.status,
            A.params_meta,
            A.report_api_meta,
            A.support_auto_create,
            IF(COALESCE(C.count, 0) > 0, 1, 0) AS report_api_status,
            B.id AS report_api_id,
            B.account_name AS report_api_account_name,
            B.params AS report_api_params,
            B.status AS report_api_params_status,
            COALESCE(B.auto_create_status, 0) AS report_api_auto_create_status,
            COALESCE(H.used_count, 0) AS used_count
        FROM
        (
            SELECT
                X.*,
                IF(Y.adn_id IS NULL, 0, 1) AS status
            FROM
            (
                SELECT id, adn_name, params_meta, report_api_meta, support_auto_create
                FROM sdk_adn
                WHERE status = 1 AND mark_delete = 0
            ) X
            LEFT OUTER JOIN
            (
                SELECT M.adn_id
                FROM adspot_sdk_channel M
                JOIN adspot N ON M.adspot_id = N.id
                JOIN media P ON N.media_id = P.id
                WHERE
                    N.status = 1 AND N.mark_delete = 0
                    AND P.status = 1 AND P.mark_delete = 0
                GROUP BY 1
            ) Y ON X.id = Y.adn_id
            WHERE
                1 = 1
                <if test="status != null">
                    AND IF(Y.adn_id IS NULL, 0, 1) = #{status}
                </if>
                <if test="searchText != null">
                    AND (X.adn_name rlike #{searchText})
                </if>
            ORDER BY status DESC, id DESC
            <if test="limit != null">
                limit #{limit}
                <if test="offset!=null">
                    offset #{offset}
                </if>
            </if>
        ) A
        LEFT OUTER JOIN
        (
            SELECT *
            FROM sdk_report_api_params
            WHERE mark_deleted = 0
        ) B ON A.id = B.adn_id
        LEFT OUTER JOIN
        (
            SELECT adn_id, count(id) AS count
            FROM sdk_report_api_params
            WHERE status = 1 AND mark_deleted = 0
            GROUP BY 1
        ) C ON A.id = C.adn_id
        LEFT OUTER JOIN
        (
            SELECT
                report_api_id,
                COUNT(*) AS used_count
            FROM
                adspot_sdk_channel
            WHERE
                mark_delete = 0
            GROUP BY
                report_api_id
        ) H ON B.id = H.report_api_id
        ORDER BY A.status DESC, A.id ASC
    </select>

    <select id = "getOneSdkAdnReportApi" resultMap = "sdkAdnMap">
        SELECT
            A.id AS adn_id,
            A.adn_name,
            A.status,
            A.params_meta,
            A.report_api_meta,
            A.support_auto_create,
            IF(COALESCE(C.count, 0) > 0, 1, 0) AS report_api_status,
            B.id AS report_api_id,
            B.account_name AS report_api_account_name,
            B.params AS report_api_params,
            B.status AS report_api_params_status,
            COALESCE(B.auto_create_status, 0) AS report_api_auto_create_status,
            COALESCE(M.used_count, 0) AS used_count
        FROM sdk_adn A
        LEFT OUTER JOIN
        (
            SELECT *
            FROM sdk_report_api_params
            WHERE mark_deleted = 0
        ) B ON A.id = B.adn_id
        LEFT OUTER JOIN
        (
            SELECT adn_id, count(id) AS count
            FROM sdk_report_api_params
            WHERE status = 1 AND mark_deleted = 0
            GROUP BY 1
        ) C ON A.id = C.adn_id
        LEFT OUTER JOIN
        (
            SELECT
                report_api_id,
                COUNT(*) AS used_count
            FROM
                adspot_sdk_channel
            WHERE
                mark_delete = 0
            GROUP BY
                report_api_id
        ) M ON B.id = M.report_api_id
        WHERE A.id = #{sdkAdnId}
    </select>

    <!-- Adn Report Api 相关接口 -->
    <select id = "getSdkAdnReportApiIdList" resultType = "java.lang.Integer">
        SELECT id
        FROM sdk_report_api_params
        WHERE
            adn_id = #{sdkAndId}
            AND mark_deleted = 0
    </select>

    <insert id = "createSdkAdnOneReportApi" useGeneratedKeys="true" keyProperty="sdkAdnReportApi.id">
        INSERT INTO sdk_report_api_params
            (adn_id, account_name, params, auto_create_status)
        VALUES(#{sdkAdnId}, #{sdkAdnReportApi.name}, #{sdkAdnReportApi.params}, #{sdkAdnReportApi.autoCreateStatus})
    </insert>

    <update id = "updateSdkAdnOneReportApi"
            parameterType = "com.easyads.management.adn.model.bean.SdkAdnReportApi">
        UPDATE sdk_report_api_params
        SET account_name = #{name}, params = #{params}, status = #{status}, auto_create_status = #{autoCreateStatus}
        WHERE id = #{id}
    </update>

    <update id = "deleteSdkAdnOneReportApi">
        UPDATE sdk_report_api_params
        SET status = 0, mark_deleted = 1
        WHERE id = #{sdkAdnReportApiId} AND adn_id = #{sdkAdnId}
    </update>
</mapper>